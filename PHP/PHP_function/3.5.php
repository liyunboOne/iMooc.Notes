<?PHP
// 值传递 & 引用传递？

// factorial 阶乘
function factorial($num) {
	$result = 1;
	for ($i=1; $i < $num; $i++) { 
		$result *= $i;
	}
	echo "$result, \n";
}
// $num = 6;
// factorial($num);
// echo $num;
// 值传递
// 形参 & 实参 的关系 编译机理？
// 值传递，只能由实参传递给形参，而不能由形参传递给实参
// 在内存中实参和形参是不同的单元， 在调用函数时，给形参分配一个储存空间，将实参的值传递给形参，当程序调用结束后，形参会被释放，实参仍旧保持并维持原来的值
// 传递类型 数值 对象 字符串 数组 等
$a = 3;
$b = 5;
$c = 8;
function swap_1($a, $b) {
	$tmp = $a;
	$a = $b;
	$b = $tmp;
	// echo "$a, $b \n";
	echo "c:,$c";
}
// 引用传递
function swap_2(&$a, &$b) {
	$tmp = $a;
	$a = $b;
	$b = $tmp;
}
swap_1($a, $b);
swap_2($a, $b);
echo "$a, $b \n";
// 引用传递 引用传值 的分析。在调用函数的时候，没有给形参分配存储空间，而是直接引用了实参的存储空间，运算过程中值发生了改变，形参被销毁，但是其所引用的实参是未被销毁的。
// 能做些什么呢？
// 在JS中，函数内可以直接使用上一级的变量，不用声名，调用结束后所引用的上一级的变量的值也会改变。而PHP不同，只能使用传递进来的变量，而无法访问上一级的变量，



?>